{"version":3,"sources":["webpack:///./src/components/Focuser.tsx","webpack:///./src/components/Section.tsx","webpack:///./src/components/Section.mdx","webpack:///./src/components/TabBoundary.tsx"],"names":["emptyChangeHandler","styles","border","display","float","fontSize","height","lineHeight","margin","outline","padding","width","FocuserWithTabRegistry","refFocuser","onBlur","e","_this","props","focusKey","onKeyDown","disabled","shouldPrevent","modifierKeys","altKey","ctrlKey","metaKey","shiftKey","key","onEnter","onNavigationKeys","onSpace","onEscape","onDelete","onPlus","onMinus","onQuestionMark","onArrowUp","onArrowKeys","onArrowDown","onArrowLeft","onArrowRight","tabRegistry","focusPrev","focusNext","preventDefault","stopPropagation","setFocuserRef","ref","focus","opts","onFocus","React","Component","this","add","nextProps","has","delete","prevProps","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","autoComplete","autoFocus","className","name","onChange","style","tabIndex","value","defaultProps","displayName","FocuserWithForwardRef","renderChildren","_this2$props","_this2","forwardedRef","_objectWithoutProperties","Object","assign","_NavigationContext__WEBPACK_IMPORTED_MODULE_1__","Consumer","children","Focuser","forwardRef","__docgenInfo","description","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","SectionWithTabRegistry","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","tabRegistryRef","filterPropKeys","propKey","assertNeverNonThrow","navigationHandler","_","navKey","onClick","focusOnClick","current","focusOrigin","focusFirst","focusLast","onEnterKey","focusIn","onEscapeKey","reg","get","TabRegistry","focusParent","createRef","undefined","boundaryProps","react_default","TabBoundary","as","boundaryKey","focusFirstOnNextOrigin","spreadControlProps","cycle","focusParentOnChildOrigin","focusParentOnEscape","SectionWithForwardRef","Section_SectionWithTabRegistry","NavigationContext","Section","Section_SectionWithForwardRef","MDXContent","Section_classCallCheck","Section_possibleConstructorReturn","Section_getPrototypeOf","layout","_this$props","components","Section_objectWithoutProperties","dist","id","index_m","__codesandbox","__position","__code","__scope","of","TabBoundaryWithTabRegistry","obj","target","parentRegistry","enableCycle","disableCycle","comp","_objectSpread","_NavigationContext__WEBPACK_IMPORTED_MODULE_3__","Provider","TabBoundaryWithForwardRef"],"mappings":"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","file":"static/js/components-section.4d14914d.js","sourcesContent":["import React from 'react';\nimport { FocuserOptions, TabRegistry } from '../TabRegistry';\nimport { NavigationContext } from './NavigationContext';\n\nexport type ArrowKey = 'ArrowUp' | 'ArrowDown' | 'ArrowLeft' | 'ArrowRight';\nexport type NavigationKey =\n    | ArrowKey\n    | 'Tab'\n    | 'Escape'\n    | 'Enter'\n    | 'Delete'\n    | 'Space'\n    | 'Plus'\n    | 'Minus'\n    | 'QuestionMark';\n\nexport interface ModifierKeys {\n    altKey: boolean;\n    ctrlKey: boolean;\n    metaKey: boolean;\n    shiftKey: boolean;\n}\n\nexport type ArrowKeyHandler = (focusKey: string, arrowKey: ArrowKey, modifierKeys: ModifierKeys) => void;\nexport type BlurEventHandler = (e: React.FocusEvent<HTMLInputElement>, focusKey: string) => void;\nexport type FocusEventHandler = (opts: FocuserOptions, focusKey: string) => void;\nexport type KeyboardEventHandler = (e: React.KeyboardEvent<HTMLInputElement>, focusKey: string) => void;\nexport type NavigationKeyHandler = (focusKey: string, navKey: NavigationKey, modifierKyes: ModifierKeys) => void;\n\nconst emptyChangeHandler = () => {\n    return;\n};\n\nexport interface ControlProps {\n    /**\n     * Focus the underlaying input field upon mount.\n     */\n    autoFocus?: boolean;\n\n    /**\n     * Whether or not the focuser is disabled; cannot be focused,\n     * thus will not propagation any events.\n     * A TabBoundary will skip this component, if trying to\n     * focus it via focusNext/focusPrev and friends.\n     */\n    disabled?: boolean;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the down arrow key on the keyboard.\n     */\n    onArrowDown?: KeyboardEventHandler;\n\n    /**\n     * Called when the underlying input field has focus and the\n     * user presses down any arrow key of the keyboard.\n     * @deprecated use [onNavigationKeys].\n     */\n    onArrowKeys?: ArrowKeyHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the left arrow key on the keyboard.\n     */\n    onArrowLeft?: KeyboardEventHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the right arrow key on the keyboard.\n     */\n    onArrowRight?: KeyboardEventHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the up arrow key on the keyboard.\n     */\n    onArrowUp?: KeyboardEventHandler;\n\n    /**\n     * Called when the underlying input loses focus.\n     */\n    onBlur?: BlurEventHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the delete key on the keyboard.\n     */\n    onDelete?: KeyboardEventHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the enter key on the keyboard.\n     */\n    onEnter?: KeyboardEventHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the escape key on the keyboard.\n     */\n    onEscape?: KeyboardEventHandler;\n\n    /**\n     * Called when the underlaying input field gains focus.\n     */\n    onFocus?: FocusEventHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the minus key on the keyboard.\n     */\n    onMinus?: KeyboardEventHandler;\n\n    /**\n     * Called when any of the listed navigation keys are pressed while\n     * the underlying input field has focus.\n     */\n    onNavigationKeys?: NavigationKeyHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the plus key on the keyboard.\n     */\n    onPlus?: KeyboardEventHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the question mark key on the keyboard.\n     */\n    onQuestionMark?: KeyboardEventHandler;\n\n    /**\n     * Called when the underlying input field has focus and the user,\n     * presses down the space key on the keyboard.\n     */\n    onSpace?: KeyboardEventHandler;\n}\n\nexport interface Props extends ControlProps {\n    /**\n     * Set the classname of the underlaying input field,\n     * this makes the component compatible with most css-in-js libraries\n     * like styled-components, glamor and emotion etc.\n     */\n    className?: string;\n\n    /**\n     * Unique identifier among siblings within a TabBoundary or TabRegistry.\n     */\n    focusKey: string;\n}\n\ninterface State {}\n\nconst styles: React.CSSProperties = {\n    border: 'none',\n    display: 'inline',\n    float: 'left',\n    fontSize: 0,\n    height: 0,\n    lineHeight: 0,\n    margin: 0,\n    outline: 'none',\n    padding: 0,\n    width: 0,\n};\n\ntype PropsWithTabRegistry = Props & { tabRegistry: TabRegistry | null };\n\nclass FocuserWithTabRegistry extends React.Component<PropsWithTabRegistry, State> {\n    public static defaultProps = {\n        autoFocus: false,\n        disabled: false,\n    };\n    public static displayName = 'Focuser';\n\n    private refFocuser: HTMLInputElement | null = null;\n\n    public componentDidMount() {\n        if (this.props.tabRegistry != null) {\n            this.props.tabRegistry.add(this.props.focusKey, this.focus);\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: PropsWithTabRegistry) {\n        if (\n            this.props.focusKey !== nextProps.focusKey &&\n            this.props.tabRegistry != null &&\n            this.props.tabRegistry.has(this.props.focusKey)\n        ) {\n            this.props.tabRegistry.delete(this.props.focusKey);\n        }\n    }\n\n    public componentDidUpdate(prevProps: PropsWithTabRegistry) {\n        if (this.props.focusKey !== prevProps.focusKey && this.props.tabRegistry != null) {\n            this.props.tabRegistry.add(this.props.focusKey, this.focus);\n        }\n    }\n\n    public componentWillUnmount() {\n        if (this.props.tabRegistry != null) {\n            this.props.tabRegistry.delete(this.props.focusKey);\n        }\n    }\n\n    private onBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n        if (this.props.onBlur != null) {\n            this.props.onBlur(e, this.props.focusKey);\n        }\n    };\n\n    private onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (this.props.disabled) {\n            return;\n        }\n\n        let shouldPrevent = false;\n        const modifierKeys: ModifierKeys = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n        };\n\n        if (e.key === 'Enter') {\n            if (this.props.onEnter != null) {\n                shouldPrevent = true;\n                this.props.onEnter(e, this.props.focusKey);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'Enter', modifierKeys);\n            }\n        } else if (e.key === ' ') {\n            if (this.props.onSpace != null) {\n                shouldPrevent = true;\n                this.props.onSpace(e, this.props.focusKey);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'Space', modifierKeys);\n            }\n        } else if (e.key === 'Escape') {\n            if (this.props.onEscape != null) {\n                shouldPrevent = true;\n                this.props.onEscape(e, this.props.focusKey);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'Escape', modifierKeys);\n            }\n        } else if (e.key === 'Delete') {\n            if (this.props.onDelete != null) {\n                shouldPrevent = true;\n                this.props.onDelete(e, this.props.focusKey);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'Delete', modifierKeys);\n            }\n        } else if (e.key === '+') {\n            if (this.props.onPlus != null) {\n                shouldPrevent = true;\n                this.props.onPlus(e, this.props.focusKey);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'Plus', modifierKeys);\n            }\n        } else if (e.key === '-') {\n            if (this.props.onMinus != null) {\n                shouldPrevent = true;\n                this.props.onMinus(e, this.props.focusKey);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'Minus', modifierKeys);\n            }\n        } else if (e.key === '?') {\n            if (this.props.onQuestionMark != null) {\n                shouldPrevent = true;\n                this.props.onQuestionMark(e, this.props.focusKey);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'QuestionMark', modifierKeys);\n            }\n        } else if (e.key === 'ArrowUp') {\n            if (this.props.onArrowUp != null) {\n                shouldPrevent = true;\n                this.props.onArrowUp(e, this.props.focusKey);\n            }\n            if (this.props.onArrowKeys != null) {\n                shouldPrevent = true;\n                this.props.onArrowKeys(this.props.focusKey, 'ArrowUp', modifierKeys);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'ArrowUp', modifierKeys);\n            }\n        } else if (e.key === 'ArrowDown') {\n            if (this.props.onArrowDown != null) {\n                shouldPrevent = true;\n                this.props.onArrowDown(e, this.props.focusKey);\n            }\n            if (this.props.onArrowKeys != null) {\n                shouldPrevent = true;\n                this.props.onArrowKeys(this.props.focusKey, 'ArrowDown', modifierKeys);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'ArrowDown', modifierKeys);\n            }\n        } else if (e.key === 'ArrowLeft') {\n            if (this.props.onArrowLeft != null) {\n                shouldPrevent = true;\n                this.props.onArrowLeft(e, this.props.focusKey);\n            }\n            if (this.props.onArrowKeys != null) {\n                shouldPrevent = true;\n                this.props.onArrowKeys(this.props.focusKey, 'ArrowLeft', modifierKeys);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'ArrowLeft', modifierKeys);\n            }\n        } else if (e.key === 'ArrowRight') {\n            if (this.props.onArrowRight != null) {\n                shouldPrevent = true;\n                this.props.onArrowRight(e, this.props.focusKey);\n            }\n            if (this.props.onArrowKeys != null) {\n                shouldPrevent = true;\n                this.props.onArrowKeys(this.props.focusKey, 'ArrowRight', modifierKeys);\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'ArrowRight', modifierKeys);\n            }\n        } else if (e.key === 'Tab') {\n            if (e.shiftKey) {\n                if (this.props.tabRegistry != null) {\n                    shouldPrevent = true;\n                    this.props.tabRegistry.focusPrev(this.props.focusKey);\n                }\n            } else {\n                if (this.props.tabRegistry != null) {\n                    shouldPrevent = true;\n                    this.props.tabRegistry.focusNext(this.props.focusKey);\n                }\n            }\n            if (this.props.onNavigationKeys != null) {\n                shouldPrevent = true;\n                this.props.onNavigationKeys(this.props.focusKey, 'Tab', modifierKeys);\n            }\n        } else if (!(e.shiftKey || e.altKey || e.ctrlKey || e.metaKey)) {\n            shouldPrevent = true;\n        }\n\n        if (shouldPrevent) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n\n    private setFocuserRef = (ref: HTMLInputElement | null) => {\n        this.refFocuser = ref;\n    };\n\n    public focus = (opts: FocuserOptions) => {\n        if (this.props.disabled || this.refFocuser == null) {\n            return false;\n        }\n        this.refFocuser.focus();\n        if (this.props.onFocus) {\n            this.props.onFocus(opts, this.props.focusKey);\n        }\n        return true;\n    };\n\n    public render() {\n        return (\n            <input\n                autoComplete=\"off\"\n                autoFocus={this.props.autoFocus}\n                className={this.props.className || 'focuser'}\n                disabled={this.props.disabled}\n                key=\"focuser\"\n                name={this.props.focusKey}\n                onBlur={this.onBlur}\n                onChange={emptyChangeHandler}\n                onKeyDown={this.onKeyDown}\n                ref={this.setFocuserRef}\n                style={styles}\n                tabIndex={-1}\n                value=\"\"\n            />\n        );\n    }\n}\n\ntype PropsWithForwardRef = Props & { forwardedRef?: React.Ref<FocuserWithTabRegistry> };\nclass FocuserWithForwardRef extends React.Component<PropsWithForwardRef> {\n    public static displayName = 'TabRegistry(Focuser)';\n\n    private renderChildren = (tabRegistry: TabRegistry | null) => {\n        const { forwardedRef, ...props } = this.props;\n        return <FocuserWithTabRegistry {...props} ref={forwardedRef} tabRegistry={tabRegistry} />;\n    };\n\n    public render() {\n        return <NavigationContext.Consumer children={this.renderChildren} />;\n    }\n}\n\n/**\n * Base component which is the heart of this library, a component that simply can\n * have focus and listen to key strokes. Common navigation handlers are made available\n * to minimize the boilable about designing keyboard interactive interfaces.\n */\nexport type Focuser = FocuserWithTabRegistry;\nexport const Focuser = React.forwardRef<FocuserWithTabRegistry, Props>((props, ref) => (\n    <FocuserWithForwardRef {...props} forwardedRef={ref} />\n)) as React.ComponentClass<Props> &\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<Props> & React.RefAttributes<FocuserWithTabRegistry>>;\ntry {\n    // @ts-ignore\n    Focuser.displayName = \"Focuser\";\n    // @ts-ignore\n    Focuser.__docgenInfo = { \"description\": \"Base component which is the heart of this library, a component that simply can\\nhave focus and listen to key strokes. Common navigation handlers are made available\\nto minimize the boilable about designing keyboard interactive interfaces.\", \"displayName\": \"Focuser\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Focuser.tsx#Focuser\"] = { docgenInfo: Focuser.__docgenInfo, name: \"Focuser\", path: \"src/components/Focuser.tsx#Focuser\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import React from 'react';\nimport { TabRegistry } from '../TabRegistry';\nimport { assertNeverNonThrow, filterPropKeys, spreadControlProps, UnpackedHTMLAttributes } from '../util';\nimport { ControlProps, Focuser, ModifierKeys, NavigationKey, NavigationKeyHandler } from './Focuser';\nimport { NavigationContext } from './NavigationContext';\nimport { TabBoundary } from './TabBoundary';\n\ninterface ComponentProps<TComp extends keyof JSX.IntrinsicElements> extends ControlProps {\n    /**\n     * Specify which intrinsic / host component the section should be rendered as.\n     */\n    // tslint:disable-next-line:no-reserved-keywords\n    as?: TComp;\n\n    /**\n     * Auto focus the section when the component is mounted.\n     * It has the same behavior as the `autoFocus` prop of the\n     * native input component.\n     */\n    autoFocus?: boolean;\n\n    /**\n     * Setting the `className` on the container component specified by\n     * the `as` prop or `div` if nothing is defined.\n     * This makes the component compatible with most of the CSS-in-JS libraries.\n     */\n    className?: string;\n\n    /**\n     * Whether or not the tab boundary should [cycle](TabBoundary#cycle) when attempting\n     * to \"tab over\" the boundary.\n     */\n    cycle?: boolean;\n\n    /**\n     * Disables the section if set to true, so the section itself cannot take\n     * focus. However it does not mean that the \"children\" of the section\n     * cannot be focused.\n     */\n    disabled?: boolean;\n\n    /**\n     * The focus key to identify the section inside the closed ancestor boundary.\n     * **Note**: it should be unique amongst its siblings of the bonudary it lives in.\n     */\n    focusKey: string;\n\n    /**\n     * Defined the behavior of clicking on the section.\n     * The deafult is give focus to the entire `section`.\n     * You can configure it to focus `first-child`, `last-child` or a specifc\n     * focus key of a child.\n     *\n     * To disable the behavior pass `false`.\n     */\n    focusOnClick?: 'section' | 'first-child' | 'last-child' | string | false;\n\n    /**\n     * Optionally pass a {@link createNavigationHandler | navigation key handler},\n     * for very fine-grained tab/arrow key control.\n     */\n    navigationHandler?: NavigationKeyHandler;\n\n    /**\n     * A\n     */\n    tabRegistryRef?: React.RefObject<TabRegistry>;\n}\n\nexport type Props<TComp extends keyof JSX.IntrinsicElements> = UnpackedHTMLAttributes<TComp> & ComponentProps<TComp>;\n\ntype PropsWithTabRegistry<TComp extends keyof JSX.IntrinsicElements> = Props<TComp> & {\n    tabRegistry: TabRegistry | null;\n};\n\ninterface State {}\n\nclass SectionWithTabRegistry<TComp extends keyof JSX.IntrinsicElements = 'div'> extends React.Component<\n    PropsWithTabRegistry<TComp>,\n    State\n> {\n    public static defaultProps = {\n        focusOnClick: 'section',\n    };\n\n    public static displayName = 'Section';\n\n    private refFocuser: Focuser | null = null;\n    private tabRegistryRef: React.RefObject<TabRegistry>;\n\n    public constructor(props: PropsWithTabRegistry<TComp>) {\n        super(props);\n        this.tabRegistryRef = props.tabRegistryRef || React.createRef();\n    }\n\n    private filterPropKeys = (propKey: keyof ComponentProps<TComp> | 'tabRegistry') => {\n        switch (propKey) {\n            case 'as':\n            case 'autoFocus':\n            case 'className':\n            case 'cycle':\n            case 'disabled':\n            case 'focusKey':\n            case 'focusOnClick':\n            case 'navigationHandler':\n            case 'onArrowDown':\n            case 'onArrowKeys':\n            case 'onArrowLeft':\n            case 'onArrowRight':\n            case 'onArrowUp':\n            case 'onBlur':\n            case 'onDelete':\n            case 'onEnter':\n            case 'onEscape':\n            case 'onFocus':\n            case 'onMinus':\n            case 'onNavigationKeys':\n            case 'onPlus':\n            case 'onQuestionMark':\n            case 'onSpace':\n            case 'tabRegistry':\n            case 'tabRegistryRef':\n                return false;\n            default:\n                assertNeverNonThrow(propKey);\n                return true;\n        }\n    };\n\n    private navigationHandler = (_: string, navKey: NavigationKey, modifierKeys: ModifierKeys) => {\n        if (this.props.navigationHandler != null) {\n            this.props.navigationHandler(this.props.focusKey, navKey, modifierKeys);\n        }\n    };\n\n    private onClick = (e: React.MouseEvent<any>) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.props.focusOnClick !== false) {\n            // prettier-ignore\n            const tabRegistry = (\n                this.props.focusOnClick !== 'section' &&\n                this.tabRegistryRef != null &&\n                this.tabRegistryRef.current\n            ) || null;\n\n            switch (this.props.focusOnClick) {\n                case 'section':\n                    if (this.refFocuser != null) {\n                        this.refFocuser.focus({\n                            focusOrigin: 'mouse',\n                        });\n                    }\n                    break;\n                case 'first-child':\n                    if (tabRegistry != null) {\n                        tabRegistry.focusFirst();\n                    }\n                    break;\n                case 'last-child':\n                    if (tabRegistry != null) {\n                        tabRegistry.focusLast();\n                    }\n                    break;\n                default:\n                    if (tabRegistry != null) {\n                        tabRegistry.focus(this.props.focusOnClick);\n                    }\n                    break;\n            }\n        }\n\n        if (this.props.onClick != null) {\n            this.props.onClick(e);\n        }\n    };\n\n    private onEnterKey = () => {\n        if (this.props.tabRegistry != null) {\n            this.props.tabRegistry.focusIn([this.props.focusKey, this.props.focusKey + '-section'], {\n                focusOrigin: 'parent',\n            });\n        }\n    };\n\n    private onEscapeKey = () => {\n        if (this.props.tabRegistry != null) {\n            const reg = this.props.tabRegistry.get(this.props.focusKey);\n            if (reg instanceof TabRegistry) {\n                reg.focusParent();\n            }\n        }\n    };\n\n    private setFocuserRef = (ref: Focuser | null) => {\n        this.refFocuser = ref;\n    };\n\n    public render() {\n        const navigationHandler = this.props.navigationHandler == null ? undefined : this.navigationHandler;\n        const boundaryProps = filterPropKeys<ComponentProps<TComp>, TComp, PropsWithTabRegistry<TComp>>(\n            this.props,\n            this.filterPropKeys,\n        );\n        return (\n            <TabBoundary\n                className={this.props.className || 'section-container'}\n                {...boundaryProps}\n                as={this.props.as}\n                boundaryKey={this.props.focusKey}\n                focusFirstOnNextOrigin={true}\n                onClick={this.onClick}\n            >\n                <Focuser\n                    {...spreadControlProps(this.props)}\n                    focusKey={this.props.focusKey}\n                    onEnter={this.onEnterKey}\n                    onEscape={this.onEscapeKey}\n                    onNavigationKeys={navigationHandler}\n                    ref={this.setFocuserRef}\n                />\n                <TabBoundary\n                    boundaryKey={this.props.focusKey + '-section'}\n                    className=\"section\"\n                    cycle={this.props.cycle}\n                    focusParentOnChildOrigin={true}\n                    focusParentOnEscape={true}\n                    tabRegistryRef={this.tabRegistryRef}\n                >\n                    {this.props.children}\n                </TabBoundary>\n            </TabBoundary>\n        );\n    }\n}\n\ntype PropsWithForwardRef<TComp extends keyof JSX.IntrinsicElements> = Props<TComp> & {\n    forwardedRef?: React.Ref<SectionWithTabRegistry<TComp>>;\n};\nclass SectionWithForwardRef<TComp extends keyof JSX.IntrinsicElements = 'div'> extends React.Component<\n    PropsWithForwardRef<TComp>\n> {\n    public static displayName = 'TabRegistry(Section)';\n\n    private renderChildren = (tabRegistry: TabRegistry | null) => {\n        const { forwardedRef, ...props } = this.props;\n        return <SectionWithTabRegistry {...props} ref={forwardedRef} tabRegistry={tabRegistry} />;\n    };\n\n    public render() {\n        return <NavigationContext.Consumer children={this.renderChildren} />;\n    }\n}\n\nconst forwardRef = <TComp extends keyof JSX.IntrinsicElements = 'div'>() =>\n    React.forwardRef<SectionWithTabRegistry<TComp>, Props<TComp>>((props, ref) => (\n        <SectionWithForwardRef {...props} forwardedRef={ref} />\n    )) as React.ComponentClass<Props<TComp>> &\n        React.ForwardRefExoticComponent<\n            React.PropsWithoutRef<Props<TComp>> & React.RefAttributes<SectionWithTabRegistry<TComp>>\n        >;\n\n/**\n * Container component, where you can group focusable elements\n * and make it easy to navigate between other groups (`Section`).\n */\nexport type Section<TComp extends keyof JSX.IntrinsicElements = 'div'> = SectionWithTabRegistry<TComp>;\nexport const Section = forwardRef<keyof JSX.IntrinsicElements>();\ntry {\n    // @ts-ignore\n    Section.displayName = \"Section\";\n    // @ts-ignore\n    Section.__docgenInfo = { \"description\": \"Container component, where you can group focusable elements\\nand make it easy to navigate between other groups (`Section`).\", \"displayName\": \"Section\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Section.tsx#Section\"] = { docgenInfo: Section.__docgenInfo, name: \"Section\", path: \"src/components/Section.tsx#Section\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { Section } from './Section';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"section\"}}>{`Section`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Describe what a section is, what use cases it has.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-usage\"}}>{`Basic usage`}</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'<Section />'} __scope={{props: this ? this.props : props,Section}}>\n    <Section />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Section} />\n           </MDXTag>\n  }\n}\n  ","import React from 'react';\nimport { TabRegistry } from '../TabRegistry';\nimport { assertNeverNonThrow, filterPropKeys, UnpackedHTMLElement } from '../util';\nimport { NavigationContext } from './NavigationContext';\n\nfunction hasNameProperty<T>(obj: T): obj is T & { name: string } {\n    return obj != null && typeof (obj as any).name === 'string';\n}\n\ninterface ComponentProps<TComp extends keyof JSX.IntrinsicElements> {\n    /**\n     * Specify which intrinsic / host component the section should be rendered as.\n     */\n    // tslint:disable-next-line:no-reserved-keywords\n    as?: TComp;\n\n    /**\n     * Key of the boundary, similar to the `focusKey` of the `Focuser`, `Grid` and `Section`\n     * **Note**: it most be unique within its enclosing boundary.\n     */\n    boundaryKey?: string;\n\n    /**\n     * Whether or not the tab boundary should cycle when attempting\n     * to tab boyond the boundary.\n     */\n    cycle?: boolean;\n\n    /**\n     * Whether ot not to focus the first element if gaining focus\n     * to the boundary from focus origin `next`.\n     */\n    focusFirstOnNextOrigin?: boolean;\n\n    /**\n     * When set to `true` and a child focuses the boundary,\n     * the boundary will delegate focusing up the tree.\n     *\n     * This is useful when having a boundary that only\n     * encloses other boundaries, then escaping an inner boundary\n     * will cause the first child of the outer boundary to be focused\n     * and thus cannot escape the outer boundary, enable this to mitigate that behavior.\n     *\n     * @example\n     * <TabBoundary boundaryKey=\"outer\" focusParentOnChildOrigin={true}>\n     *   <Section focusKey=\"inner1\" />\n     *   <Section focusKey=\"inner2\" />\n     *   <Section focusKey=\"inner3\" />\n     * </TabBoundary>\n     */\n    focusParentOnChildOrigin?: boolean;\n\n    /**\n     * Set this to `true` to focus the parent of the boundary if exists\n     * when hitting the escape key.\n     *\n     * @example\n     * <TabBoundary boundaryKey=\"outer\">\n     *   <Focuser focusKey=\"editor-focuser\" />\n     *   <TabBoundary boundaryKey=\"editor\" focusParentOnEscape={true}>\n     *     <Focuser focusKey=\"editor-input1\" />\n     *     <Focuser focusKey=\"editor-input2\" />\n     *   </TabBoundary>\n     * </TabBoundary>\n     */\n    focusParentOnEscape?: boolean;\n\n    /**\n     * Take a ref to the tab registry this boundary creates.\n     */\n    tabRegistryRef?: React.RefObject<TabRegistry>;\n}\n\nexport type Props<TComp extends keyof JSX.IntrinsicElements = 'div'> = React.HTMLAttributes<\n    UnpackedHTMLElement<JSX.IntrinsicElements[TComp]>\n> &\n    ComponentProps<TComp>;\n\ninterface State {}\n\ntype PropsWithTabRegistry<TComp extends keyof JSX.IntrinsicElements> = Props<TComp> & {\n    parentRegistry: TabRegistry | null;\n};\n\nclass TabBoundaryWithTabRegistry<TComp extends keyof JSX.IntrinsicElements = 'div'> extends React.Component<\n    PropsWithTabRegistry<TComp>,\n    State\n> {\n    public static displayName = 'TabBoundary';\n\n    private tabRegistry: TabRegistry<string>;\n\n    public constructor(props: PropsWithTabRegistry<TComp>) {\n        super(props);\n\n        this.tabRegistry = new TabRegistry({\n            cycle: props.cycle,\n            focusFirstOnNextOrigin: props.focusFirstOnNextOrigin,\n            focusParentOnChildOrigin: props.focusParentOnChildOrigin,\n        });\n\n        if (props.tabRegistryRef != null) {\n            (props.tabRegistryRef as React.MutableRefObject<TabRegistry>).current = this.tabRegistry;\n        }\n    }\n\n    public componentDidMount() {\n        if (this.props.boundaryKey != null && this.props.parentRegistry != null) {\n            this.props.parentRegistry.add(this.props.boundaryKey, this.tabRegistry);\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: PropsWithTabRegistry<TComp>) {\n        if (this.props.cycle !== nextProps.cycle) {\n            nextProps.cycle ? this.tabRegistry.enableCycle() : this.tabRegistry.disableCycle();\n        }\n\n        if (this.props.focusParentOnChildOrigin !== nextProps.focusParentOnChildOrigin) {\n            this.tabRegistry.focusParentOnChildOrigin = nextProps.focusParentOnChildOrigin === true;\n        }\n\n        if (this.props.focusFirstOnNextOrigin !== nextProps.focusFirstOnNextOrigin) {\n            this.tabRegistry.focusFirstOnNextOrigin = nextProps.focusFirstOnNextOrigin === true;\n        }\n\n        if (\n            this.props.boundaryKey !== nextProps.boundaryKey &&\n            this.props.parentRegistry != null &&\n            this.props.parentRegistry.has(this.props.boundaryKey)\n        ) {\n            this.props.parentRegistry.delete(this.props.boundaryKey);\n        }\n    }\n\n    public componentDidUpdate(prevProps: PropsWithTabRegistry<TComp>) {\n        if (\n            this.props.boundaryKey !== prevProps.boundaryKey &&\n            this.props.parentRegistry != null &&\n            this.props.boundaryKey != null\n        ) {\n            this.props.parentRegistry.add(this.props.boundaryKey, this.tabRegistry);\n        }\n    }\n\n    public componentWillUnmount() {\n        if (this.props.boundaryKey != null && this.props.parentRegistry != null) {\n            this.props.parentRegistry.delete(this.props.boundaryKey);\n        }\n    }\n\n    private filterPropKeys = (propKey: (keyof ComponentProps<TComp>) | 'parentRegistry') => {\n        switch (propKey) {\n            case 'as':\n            case 'boundaryKey':\n            case 'cycle':\n            case 'focusFirstOnNextOrigin':\n            case 'focusParentOnEscape':\n            case 'focusParentOnChildOrigin':\n            case 'parentRegistry':\n            case 'tabRegistryRef':\n                return false;\n            default:\n                assertNeverNonThrow(propKey);\n                return true;\n        }\n    };\n\n    private onKeyDown = (e: React.KeyboardEvent<UnpackedHTMLElement<JSX.IntrinsicElements[TComp]>>) => {\n        if (e.key === 'Tab' && hasNameProperty(e.target)) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (e.shiftKey) {\n                this.tabRegistry.focusPrev(e.target.name);\n            } else {\n                this.tabRegistry.focusNext(e.target.name);\n            }\n        } else if (e.key === 'Escape' && this.props.focusParentOnEscape) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.tabRegistry.focusParent();\n        }\n\n        if (this.props.onKeyDown != null) {\n            this.props.onKeyDown(e);\n        }\n    };\n\n    public render() {\n        const props = filterPropKeys<ComponentProps<TComp>, TComp, PropsWithTabRegistry<TComp>>(\n            this.props,\n            this.filterPropKeys,\n        );\n\n        const comp = this.props.as == null ? 'div' : this.props.as;\n        const children = React.createElement(comp, { ...props, onKeyDown: this.onKeyDown }, this.props.children);\n\n        return <NavigationContext.Provider value={this.tabRegistry}>{children}</NavigationContext.Provider>;\n    }\n}\n\ntype PropsWithForwardRef<TComp extends keyof JSX.IntrinsicElements> = Props<TComp> & {\n    forwardedRef?: React.Ref<TabBoundaryWithTabRegistry<TComp>>;\n};\nclass TabBoundaryWithForwardRef<TComp extends keyof JSX.IntrinsicElements = 'div'> extends React.Component<\n    PropsWithForwardRef<TComp>\n> {\n    public static displayName = 'TabRegistry(TabBoundary)';\n\n    private renderChildren = (parentRegistry: TabRegistry | null) => {\n        const { forwardedRef, ...props } = this.props;\n        return <TabBoundaryWithTabRegistry {...props} parentRegistry={parentRegistry} ref={forwardedRef} />;\n    };\n\n    public render() {\n        return <NavigationContext.Consumer children={this.renderChildren} />;\n    }\n}\n\nconst forwardRef = <TComp extends keyof JSX.IntrinsicElements = 'div'>() =>\n    React.forwardRef<TabBoundaryWithTabRegistry<TComp>, Props<TComp>>((props, ref) => (\n        <TabBoundaryWithForwardRef {...props} forwardedRef={ref} />\n    )) as React.ComponentClass<Props<TComp>> &\n        React.ForwardRefExoticComponent<\n            React.PropsWithoutRef<Props<TComp>> & React.RefAttributes<TabBoundaryWithTabRegistry<TComp>>\n        >;\n\n/**\n * Define a tab/navigation boundary of focusable elements.\n * This is a primitive way of grouping focusables.\n *\n * @example Simple\n * <TabBoundary>\n *   <Focuser focusKey=\"field1\" />\n * </TabBoundary>\n *\n * @example Nested boundary\n * <TabBoundary>\n *   <TabBoundary focusKey=\"sidebar\">\n *     <Focuser focusKey=\"menu-link1\" />\n *     <Focuser focusKey=\"menu-link2\" />\n *   </TabBoundary>\n *   <TabBoundary focusKey=\"main-content\">\n *      <Focuser focusKey=\"search-bar\" />\n *      <Focuser focusKey=\"some-other-element\" />\n *   </TabBoundary>\n * </TabBoundary>\n */\nexport type TabBoundary<TComp extends keyof JSX.IntrinsicElements = 'div'> = TabBoundaryWithTabRegistry<TComp>;\nexport const TabBoundary = forwardRef<keyof JSX.IntrinsicElements>();\ntry {\n    // @ts-ignore\n    TabBoundary.displayName = \"TabBoundary\";\n    // @ts-ignore\n    TabBoundary.__docgenInfo = { \"description\": \"Define a tab/navigation boundary of focusable elements.\\nThis is a primitive way of grouping focusables.\\n@example Simple\\n<TabBoundary>\\n<Focuser focusKey=\\\"field1\\\" />\\n</TabBoundary>\\n@example Nested boundary\\n<TabBoundary>\\n<TabBoundary focusKey=\\\"sidebar\\\">\\n<Focuser focusKey=\\\"menu-link1\\\" />\\n<Focuser focusKey=\\\"menu-link2\\\" />\\n</TabBoundary>\\n<TabBoundary focusKey=\\\"main-content\\\">\\n<Focuser focusKey=\\\"search-bar\\\" />\\n<Focuser focusKey=\\\"some-other-element\\\" />\\n</TabBoundary>\\n</TabBoundary>\", \"displayName\": \"TabBoundary\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/TabBoundary.tsx#TabBoundary\"] = { docgenInfo: TabBoundary.__docgenInfo, name: \"TabBoundary\", path: \"src/components/TabBoundary.tsx#TabBoundary\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}