{"version":3,"sources":["webpack:///./src/FieldNavigation.ts","webpack:///./src/components/Grid.tsx","webpack:///./src/components/Grid.mdx","webpack:///./src/components/TabBoundary.tsx"],"names":["__webpack_require__","d","__webpack_exports__","createNavigationHandler","originUp","focusOrigin","originDown","originLeft","originRight","originPrev","originNext","focusDown","fieldMap","getTabRegistry","x","y","maxX","maxY","origin","tabRegistry","nextOverflow","yCandidate","Math","min","xCandidate","nextField","focus","focusLeft","prevOverflow","max","focusUp","focusRight","navigationMap","tabDirectionAxis","arguments","length","undefined","fetcher","current","focusKey","navigationKey","modifierKeys","altKey","ctrlKey","metaKey","shiftKey","coordinates","findFieldCoordinates","displayName","__docgenInfo","description","props","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error","Grid","_React$Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","tabRegistryRef","filterPropKeys","propKey","assertNeverNonThrow","React","createRef","state","navigationHandler","_inherits","Component","key","value","nextProps","_this2","setState","_","react_default","a","createElement","TabBoundary","Object","assign","as","boundaryKey","children","defaultProps","MDXContent","Grid_classCallCheck","Grid_possibleConstructorReturn","Grid_getPrototypeOf","layout","_this$props","components","_objectWithoutProperties","dist","id","index_m","__codesandbox","__position","__code","__scope","Grid_Grid","of","TabBoundaryWithTabRegistry","onKeyDown","e","obj","target","preventDefault","stopPropagation","focusPrev","focusNext","focusParentOnEscape","focusParent","TabRegistry","cycle","focusFirstOnNextOrigin","focusParentOnChildOrigin","parentRegistry","add","enableCycle","disableCycle","has","delete","prevProps","comp","_objectSpread","react__WEBPACK_IMPORTED_MODULE_0___default","_NavigationContext__WEBPACK_IMPORTED_MODULE_3__","Provider","TabBoundaryWithForwardRef","renderChildren","_this2$props","forwardedRef","ref","Consumer","forwardRef"],"mappings":"iHAcAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAMC,EAA2B,CAC7BC,YAAa,MAGXC,EAA6B,CAC/BD,YAAa,QAGXE,EAA6B,CAC/BF,YAAa,QAGXG,EAA8B,CAChCH,YAAa,SAGXI,EAA6B,CAC/BJ,YAAa,QAGXK,EAA6B,CAC/BL,YAAa,QAmBjB,SAASM,EACLC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAcN,IACdO,EAAeL,IAAME,GAAQC,IAAWT,EAE9C,GAAmB,MAAfU,IAAyBC,GAAgBL,IAAME,EAC/C,OAAO,EAGX,IAAMI,EAAaD,GAAgBN,IAAME,EAAO,EAAIM,KAAKC,IAAIN,EAAMF,EAAI,GACjES,EAAaJ,EAAeE,KAAKC,IAAIP,EAAMF,EAAI,GAAKA,EACpDW,EAAYb,EAASS,GAAYG,GAEvC,OACkB,MAAbC,GAAqBN,EAAYO,MAAMD,EAAWP,IACnDP,EAAUC,EAAUC,EAAgBW,EAAYH,EAAYL,EAAMC,EAAMC,GAIhF,SAASS,EACLf,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAcN,IACde,EAAqB,IAANd,GAAWI,IAAWR,EAE3C,GAAmB,MAAfS,IAAyBS,GAAsB,IAANd,EACzC,OAAO,EAGX,IAAMU,EAAaI,GAAsB,IAANb,EAAUC,EAAOM,KAAKO,IAAI,EAAGf,EAAI,GAC9DO,EAAaO,EAAeN,KAAKO,IAAI,EAAGd,EAAI,GAAKA,EACjDU,EAAYb,EAASS,GAAYG,GAEvC,OACkB,MAAbC,GAAqBN,EAAYO,MAAMD,EAAWP,IACnDY,EAAQlB,EAAUC,EAAgBW,EAAYH,EAAYL,EAAMC,EAAMC,IACtEP,EAAUC,EAAUC,EAAgBW,EAAYH,EAAYL,EAAMC,EAAMC,IACxES,EAAUf,EAAUC,EAAgBW,EAAYH,EAAYL,EAAMC,EAAMC,GAIhF,SAASa,EACLnB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAcN,IACdO,EAAeN,IAAME,GAAQE,IAAWT,EAE9C,GAAmB,MAAfU,IAAyBC,GAAgBN,IAAME,EAC/C,OAAO,EAGX,IAAMQ,EAAaJ,GAAgBL,IAAME,EAAO,EAAIK,KAAKC,IAAIP,EAAMF,EAAI,GACjEO,EAAaD,EAAeE,KAAKC,IAAIN,EAAMF,EAAI,GAAKA,EACpDU,EAAYb,EAASS,GAAYG,GAEvC,OACkB,MAAbC,GAAqBN,EAAYO,MAAMD,EAAWP,IACnDY,EAAQlB,EAAUC,EAAgBW,EAAYH,EAAYL,EAAMC,EAAMC,IACtEP,EAAUC,EAAUC,EAAgBW,EAAYH,EAAYL,EAAMC,EAAMC,IACxEa,EAAWnB,EAAUC,EAAgBW,EAAYH,EAAYL,EAAMC,EAAMC,GAIjF,SAASY,EACLlB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAcN,IACde,EAAqB,IAANb,GAAWG,IAAWR,EAE3C,GAAmB,MAAfS,IAAyBS,GAAsB,IAANb,EACzC,OAAO,EAGX,IAAMM,EAAaO,GAAsB,IAANd,EAAUG,EAAOK,KAAKO,IAAI,EAAGd,EAAI,GAC9DS,EAAaI,EAAeN,KAAKO,IAAI,EAAGf,EAAI,GAAKA,EACjDW,EAAYb,EAASS,GAAYG,GAEvC,OACkB,MAAbC,GAAqBN,EAAYO,MAAMD,EAAWP,IACnDY,EAAQlB,EAAUC,EAAgBW,EAAYH,EAAYL,EAAMC,EAAMC,GAUvE,SAASf,EACZ6B,EACAnB,GAEoB,IADpBoB,EACoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADU,IAExBjB,EAAOe,EAAcG,OAAS,EAC9BnB,EAAOgB,EAAc,GAAGG,OAAS,EAEjCE,EAAoC,oBAAnBxB,EAAgCA,EAAiB,kBAAMA,EAAeyB,SAE7F,OAAO,SAACC,EAAkBC,EAA8BC,GACpD,KACIA,EAAaC,QACbD,EAAaE,SACbF,EAAaG,SACM,QAAlBJ,GAA2BC,EAAaI,UAJ7C,CASA,IAAMC,EAtJd,SACIlC,EACA2B,EACAvB,EACAC,GAEA,IAAK,IAAIF,EAAI,EAAGA,GAAKE,EAAMF,IACvB,IAAK,IAAID,EAAI,EAAGA,GAAKE,EAAMF,IACvB,GAAIyB,IAAa3B,EAASG,GAAGD,GACzB,MAAO,CAACA,EAAGC,GAIvB,OAAO,KAyIiBgC,CAAqBf,EAAeO,EAAUvB,EAAMC,GACxE,GAAmB,MAAf6B,EAAJ,CAIA,IAAMhC,EAAIgC,EAAY,GAChB/B,EAAI+B,EAAY,GAEtB,OAAQN,GACJ,IAAK,UACD,OAAOV,EAAQE,EAAeK,EAASvB,EAAGC,EAAGC,EAAMC,EAAMX,GAC7D,IAAK,YACD,OAAOK,EAAUqB,EAAeK,EAASvB,EAAGC,EAAGC,EAAMC,EAAMb,GAC/D,IAAK,YACD,OAAOuB,EAAUK,EAAeK,EAASvB,EAAGC,EAAGC,EAAMC,EAAMT,GAC/D,IAAK,aACD,OAAOuB,EAAWC,EAAeK,EAASvB,EAAGC,EAAGC,EAAMC,EAAMV,GAChE,IAAK,MACD,OAAIkC,EAAaI,SACe,MAArBZ,EACDH,EAAQE,EAAeK,EAASvB,EAAGC,EAAGC,EAAMC,EAAMP,GAClDiB,EAAUK,EAAeK,EAASvB,EAAGC,EAAGC,EAAMC,EAAMP,GAE9B,MAArBuB,EACDtB,EAAUqB,EAAeK,EAASvB,EAAGC,EAAGC,EAAMC,EAAMR,GACpDsB,EAAWC,EAAeK,EAASvB,EAAGC,EAAGC,EAAMC,EAAMR,GAEnE,QACI,OAAO,MAIvB,IAEIN,EAAwB6C,YAAc,0BAEtC7C,EAAwB8C,aAAe,CAAEC,YAAe,uNAA0NF,YAAe,0BAA2BG,MAAS,IAE9R,qBAA5BC,0BAEPA,wBAAwB,kDAAoD,CAAEC,WAAYlD,EAAwB8C,aAAcK,KAAM,0BAA2BC,KAAM,mDAE/K,MAAOC,2lCC7KA,IAAMC,EAAb,SAAAC,GAOI,SAAAD,EAAmBN,GAAqB,IAAAQ,EAAA,mGAAAC,CAAAC,KAAAJ,IACpCE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMV,KAFFc,oBACgC,EAAAN,EAoBhCO,eAAiB,SAACC,GACtB,OAAQA,GACJ,IAAK,KACL,IAAK,WACL,IAAK,gBACL,IAAK,WACL,IAAK,mBACL,IAAK,cACD,OAAO,EACX,QAEI,OADAC,YAAoBD,IACb,IA7BfR,EAAKM,eAAiBI,IAAMC,YAC5BX,EAAKY,MAAQ,CACTC,kBAAmBrE,YACfgD,EAAMnB,cACN2B,EAAKM,eACLd,EAAMlB,mBAPsB0B,YAP5C,0OAAAc,CAAAhB,EAA6EY,IAAMK,aAAnFjB,KAAA,EAAAkB,IAAA,4BAAAC,MAAA,SAmBqCC,GAAyB,IAAAC,EAAAjB,KAClDA,KAAKV,MAAMnB,gBAAkB6C,EAAU7C,eACvC6B,KAAKkB,SAAS,SAAAC,GAAC,MAAK,CAChBR,kBAAmBrE,YAAwB0E,EAAU7C,cAAe8C,EAAKb,qBAtBzF,CAAAU,IAAA,SAAAC,MAAA,WA2CQ,IAAMzB,EAAQe,YAA2DL,KAAKV,MAAOU,KAAKK,gBAE1F,OACIe,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GACQnC,EADR,CAEIoC,GAAI1B,KAAKV,MAAMoC,GACfC,YAAa3B,KAAKV,MAAMZ,SACxB0B,eAAgBJ,KAAKI,iBAEpBJ,KAAKV,MAAMsC,SAAS5B,KAAKU,MAAMC,oDApDhDf,EAAA,GAAaA,EACKiC,aAAe,CACzBzD,iBAAkB,KAFbwB,EAKKT,YAAc,OAoDhC,IAEIS,EAAKT,YAAc,OAEnBS,EAAKR,aAAe,CAAEC,YAAe,kKAAmKF,YAAe,OAAQG,MAAS,IAEjM,qBAA5BC,0BAEPA,wBAAwB,gCAAkC,CAAEC,WAAYI,EAAKR,aAAcK,KAAM,OAAQC,KAAM,iCAEvH,MAAOC,6sCCtHcmC,cACnB,SAAAA,EAAYxC,GAAO,IAAAQ,EAAA,mGAAAiC,CAAA/B,KAAA8B,IACjBhC,EAAAkC,EAAAhC,KAAAiC,EAAAH,GAAA3B,KAAAH,KAAMV,KACD4C,OAAS,KAFGpC,yPADmBU,IAAMK,kDAKnC,IAAAsB,EAC0BnC,KAAKV,MAA9B8C,EADDD,EACCC,WAAe9C,EADhB+C,EAAAF,EAAA,gBAGP,OAAOf,EAAAC,EAAAC,cAACgB,EAAA,OAAD,CACE7C,KAAK,UAEL2C,WAAYA,GACzBhB,EAAAC,EAAAC,cAACgB,EAAA,OAAD,CAAQ7C,KAAK,KAAK2C,WAAYA,EAAY9C,MAAO,CAACiD,GAAK,SAAvD,QACAnB,EAAAC,EAAAC,cAACgB,EAAA,OAAD,CAAQ7C,KAAK,IAAI2C,WAAYA,GAA7B,qFACAhB,EAAAC,EAAAC,cAACgB,EAAA,OAAD,CAAQ7C,KAAK,KAAK2C,WAAYA,EAAY9C,MAAO,CAACiD,GAAK,gBAAvD,eACAnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYC,cAAa,gz3BAAmz3BC,WAAY,EAAGC,OAAQ,WAAYC,QAAS,CAACtD,MAAOU,KAAOA,KAAKV,MAAQA,EAAMM,SACt53BwB,EAAAC,EAAAC,cAACuB,EAAD,OAEJzB,EAAAC,EAAAC,cAACgB,EAAA,OAAD,CAAQ7C,KAAK,KAAK2C,WAAYA,EAAY9C,MAAO,CAACiD,GAAK,UAAvD,SACAnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYM,GAAIlD,k7DC2DVmD,cAQF,SAAAA,EAAmBzD,GAAoC,IAAAQ,EAAA,OAAAC,EAAAC,KAAA+C,IACnDjD,EAAAG,EAAAD,KAAAE,EAAA6C,GAAA5C,KAAAH,KAAMV,KAHFhC,iBAE+C,EAAAwC,EA0D/CO,eAAiB,SAACC,GACtB,OAAQA,GACJ,IAAK,KACL,IAAK,cACL,IAAK,QACL,IAAK,yBACL,IAAK,sBACL,IAAK,2BACL,IAAK,iBACL,IAAK,iBACD,OAAO,EACX,QAEI,OADAC,YAAoBD,IACb,IAvEoCR,EA2E/CkD,UAAY,SAACC,GAlKzB,IAA4BC,EAmKN,QAAVD,EAAEnC,MAlKI,OADUoC,EAmKmBD,EAAEE,SAlKM,kBAArBD,EAAYzD,OAmKlCwD,EAAEG,iBACFH,EAAEI,kBACEJ,EAAEjE,SACFc,EAAKxC,YAAYgG,UAAUL,EAAEE,OAAO1D,MAEpCK,EAAKxC,YAAYiG,UAAUN,EAAEE,OAAO1D,OAEvB,WAAVwD,EAAEnC,KAAoBhB,EAAKR,MAAMkE,sBACxCP,EAAEG,iBACFH,EAAEI,kBACFvD,EAAKxC,YAAYmG,eAGO,MAAxB3D,EAAKR,MAAM0D,WACXlD,EAAKR,MAAM0D,UAAUC,IAxFzBnD,EAAKxC,YAAc,IAAIoG,IAAY,CAC/BC,MAAOrE,EAAMqE,MACbC,uBAAwBtE,EAAMsE,uBAC9BC,yBAA0BvE,EAAMuE,2BAGR,MAAxBvE,EAAMc,iBACLd,EAAMc,eAAuD3B,QAAUqB,EAAKxC,aAV9BwC,aARiCU,IAAMK,0DAuB5D,MAA1Bb,KAAKV,MAAMqC,aAAoD,MAA7B3B,KAAKV,MAAMwE,gBAC7C9D,KAAKV,MAAMwE,eAAeC,IAAI/D,KAAKV,MAAMqC,YAAa3B,KAAK1C,+DAIlC0D,GACzBhB,KAAKV,MAAMqE,QAAU3C,EAAU2C,QAC/B3C,EAAU2C,MAAQ3D,KAAK1C,YAAY0G,cAAgBhE,KAAK1C,YAAY2G,gBAGpEjE,KAAKV,MAAMuE,2BAA6B7C,EAAU6C,2BAClD7D,KAAK1C,YAAYuG,0BAAkE,IAAvC7C,EAAU6C,0BAGtD7D,KAAKV,MAAMsE,yBAA2B5C,EAAU4C,yBAChD5D,KAAK1C,YAAYsG,wBAA8D,IAArC5C,EAAU4C,wBAIpD5D,KAAKV,MAAMqC,cAAgBX,EAAUW,aACR,MAA7B3B,KAAKV,MAAMwE,gBACX9D,KAAKV,MAAMwE,eAAeI,IAAIlE,KAAKV,MAAMqC,cAEzC3B,KAAKV,MAAMwE,eAAeK,OAAOnE,KAAKV,MAAMqC,wDAI1ByC,GAElBpE,KAAKV,MAAMqC,cAAgByC,EAAUzC,aACR,MAA7B3B,KAAKV,MAAMwE,gBACe,MAA1B9D,KAAKV,MAAMqC,aAEX3B,KAAKV,MAAMwE,eAAeC,IAAI/D,KAAKV,MAAMqC,YAAa3B,KAAK1C,4DAKjC,MAA1B0C,KAAKV,MAAMqC,aAAoD,MAA7B3B,KAAKV,MAAMwE,gBAC7C9D,KAAKV,MAAMwE,eAAeK,OAAOnE,KAAKV,MAAMqC,8CA0ChD,IAAMrC,EAAQe,YACVL,KAAKV,MACLU,KAAKK,gBAGHgE,EAAwB,MAAjBrE,KAAKV,MAAMoC,GAAa,MAAQ1B,KAAKV,MAAMoC,GAClDE,EAAWpB,IAAMc,cAAc+C,qUAApBC,CAAA,GAA+BhF,EAA/B,CAAsC0D,UAAWhD,KAAKgD,YAAahD,KAAKV,MAAMsC,UAE/F,OAAO2C,EAAAlD,EAAAC,cAACkD,EAAA,EAAkBC,SAAnB,CAA4B1D,MAAOf,KAAK1C,aAAcsE,YAhH/DmB,EAIY5D,YAAc,kBAmH1BuF,+KAKMC,eAAiB,SAACb,GAAuC,IAAAc,EAC1B3D,EAAK3B,MAAhCuF,EADqDD,EACrDC,aAAiBvF,EADoC+C,EAAAuC,EAAA,kBAE7D,OAAOL,EAAAlD,EAAAC,cAACyB,EAADvB,OAAAC,OAAA,GAAgCnC,EAAhC,CAAuCwE,eAAgBA,EAAgBgB,IAAKD,mBAPArE,IAAMK,+CAWzF,OAAO0D,EAAAlD,EAAAC,cAACkD,EAAA,EAAkBO,SAAnB,CAA4BnD,SAAU5B,KAAK2E,0BAXpDD,EAGYvF,YAAc,2BAYhC,IA8BaoC,EA7BTf,IAAMwE,WAA4D,SAAC1F,EAAOwF,GAAR,OAC9DP,EAAAlD,EAAAC,cAACoD,EAADlD,OAAAC,OAAA,GAA+BnC,EAA/B,CAAsCuF,aAAcC,OA6B5D,IAEIvD,EAAYpC,YAAc,cAE1BoC,EAAYnC,aAAe,CAAEC,YAAe,gfAA+fF,YAAe,cAAeG,MAAS,IAE3iB,qBAA5BC,0BAEPA,wBAAwB,8CAAgD,CAAEC,WAAY+B,EAAYnC,aAAcK,KAAM,cAAeC,KAAM,+CAEnJ,MAAOC","file":"static/js/components-grid.55792f20.js","sourcesContent":["import { ModifierKeys, NavigationKey, NavigationKeyHandler } from './components/Focuser';\nimport { FocuserOptions, TabRegistry } from './TabRegistry';\n\ntype Maybe<T> = T | null;\n\nexport type NavigationMap =\n    | [Maybe<string>][]\n    | [Maybe<string>, Maybe<string>][]\n    | [Maybe<string>, Maybe<string>, Maybe<string>][]\n    | [Maybe<string>, Maybe<string>, Maybe<string>, Maybe<string>][]\n    | [Maybe<string>, Maybe<string>, Maybe<string>, Maybe<string>, Maybe<string>][];\n\ntype TabRegistryFetcher = () => TabRegistry<string> | null;\n\nconst originUp: FocuserOptions = {\n    focusOrigin: 'up',\n};\n\nconst originDown: FocuserOptions = {\n    focusOrigin: 'down',\n};\n\nconst originLeft: FocuserOptions = {\n    focusOrigin: 'left',\n};\n\nconst originRight: FocuserOptions = {\n    focusOrigin: 'right',\n};\n\nconst originPrev: FocuserOptions = {\n    focusOrigin: 'prev',\n};\n\nconst originNext: FocuserOptions = {\n    focusOrigin: 'next',\n};\n\nfunction findFieldCoordinates(\n    fieldMap: NavigationMap,\n    focusKey: string,\n    maxX: number,\n    maxY: number,\n): [number, number] | null {\n    for (let y = 0; y <= maxY; y++) {\n        for (let x = 0; x <= maxX; x++) {\n            if (focusKey === fieldMap[y][x]) {\n                return [x, y];\n            }\n        }\n    }\n    return null;\n}\n\nfunction focusDown(\n    fieldMap: NavigationMap,\n    getTabRegistry: TabRegistryFetcher,\n    x: number,\n    y: number,\n    maxX: number,\n    maxY: number,\n    origin: FocuserOptions,\n): boolean {\n    const tabRegistry = getTabRegistry();\n    const nextOverflow = y === maxY && origin === originPrev;\n\n    if (tabRegistry == null || (!nextOverflow && y === maxY)) {\n        return false;\n    }\n\n    const yCandidate = nextOverflow && x !== maxX ? 0 : Math.min(maxY, y + 1);\n    const xCandidate = nextOverflow ? Math.min(maxX, x + 1) : x;\n    const nextField = fieldMap[yCandidate][xCandidate];\n\n    return (\n        (nextField != null && tabRegistry.focus(nextField, origin)) ||\n        focusDown(fieldMap, getTabRegistry, xCandidate, yCandidate, maxX, maxY, origin)\n    );\n}\n\nfunction focusLeft(\n    fieldMap: NavigationMap,\n    getTabRegistry: TabRegistryFetcher,\n    x: number,\n    y: number,\n    maxX: number,\n    maxY: number,\n    origin: FocuserOptions,\n): boolean {\n    const tabRegistry = getTabRegistry();\n    const prevOverflow = x === 0 && origin === originNext;\n\n    if (tabRegistry == null || (!prevOverflow && x === 0)) {\n        return false;\n    }\n\n    const xCandidate = prevOverflow && y !== 0 ? maxX : Math.max(0, x - 1);\n    const yCandidate = prevOverflow ? Math.max(0, y - 1) : y;\n    const nextField = fieldMap[yCandidate][xCandidate];\n\n    return (\n        (nextField != null && tabRegistry.focus(nextField, origin)) ||\n        focusUp(fieldMap, getTabRegistry, xCandidate, yCandidate, maxX, maxY, origin) ||\n        focusDown(fieldMap, getTabRegistry, xCandidate, yCandidate, maxX, maxY, origin) ||\n        focusLeft(fieldMap, getTabRegistry, xCandidate, yCandidate, maxX, maxY, origin)\n    );\n}\n\nfunction focusRight(\n    fieldMap: NavigationMap,\n    getTabRegistry: TabRegistryFetcher,\n    x: number,\n    y: number,\n    maxX: number,\n    maxY: number,\n    origin: FocuserOptions,\n): boolean {\n    const tabRegistry = getTabRegistry();\n    const nextOverflow = x === maxX && origin === originPrev;\n\n    if (tabRegistry == null || (!nextOverflow && x === maxX)) {\n        return false;\n    }\n\n    const xCandidate = nextOverflow && y !== maxY ? 0 : Math.min(maxX, x + 1);\n    const yCandidate = nextOverflow ? Math.min(maxY, y + 1) : y;\n    const nextField = fieldMap[yCandidate][xCandidate];\n\n    return (\n        (nextField != null && tabRegistry.focus(nextField, origin)) ||\n        focusUp(fieldMap, getTabRegistry, xCandidate, yCandidate, maxX, maxY, origin) ||\n        focusDown(fieldMap, getTabRegistry, xCandidate, yCandidate, maxX, maxY, origin) ||\n        focusRight(fieldMap, getTabRegistry, xCandidate, yCandidate, maxX, maxY, origin)\n    );\n}\n\nfunction focusUp(\n    fieldMap: NavigationMap,\n    getTabRegistry: TabRegistryFetcher,\n    x: number,\n    y: number,\n    maxX: number,\n    maxY: number,\n    origin: FocuserOptions,\n): boolean {\n    const tabRegistry = getTabRegistry();\n    const prevOverflow = y === 0 && origin === originNext;\n\n    if (tabRegistry == null || (!prevOverflow && y === 0)) {\n        return false;\n    }\n\n    const yCandidate = prevOverflow && x !== 0 ? maxY : Math.max(0, y - 1);\n    const xCandidate = prevOverflow ? Math.max(0, x - 1) : x;\n    const nextField = fieldMap[yCandidate][xCandidate];\n\n    return (\n        (nextField != null && tabRegistry.focus(nextField, origin)) ||\n        focusUp(fieldMap, getTabRegistry, xCandidate, yCandidate, maxX, maxY, origin)\n    );\n}\n\n/**\n * Create a keyboard event handler from map of focusable elements\n * you can pass to the `Focuser` to alter the \"default\" behavior of\n * tabs direction to support multiple column layouts, and\n * adds arrow key navigation.\n */\nexport function createNavigationHandler(\n    navigationMap: NavigationMap,\n    getTabRegistry: TabRegistryFetcher | React.RefObject<TabRegistry | null>,\n    tabDirectionAxis: 'x' | 'y' = 'x',\n): NavigationKeyHandler {\n    const maxY = navigationMap.length - 1;\n    const maxX = navigationMap[0].length - 1;\n\n    const fetcher = typeof getTabRegistry === 'function' ? getTabRegistry : () => getTabRegistry.current;\n\n    return (focusKey: string, navigationKey: NavigationKey, modifierKeys: ModifierKeys) => {\n        if (\n            modifierKeys.altKey ||\n            modifierKeys.ctrlKey ||\n            modifierKeys.metaKey ||\n            (navigationKey !== 'Tab' && modifierKeys.shiftKey)\n        ) {\n            return; // don't act on modifier keys except when tabbing.\n        }\n\n        const coordinates = findFieldCoordinates(navigationMap, focusKey, maxX, maxY);\n        if (coordinates == null) {\n            return;\n        }\n\n        const x = coordinates[0];\n        const y = coordinates[1];\n\n        switch (navigationKey) {\n            case 'ArrowUp':\n                return focusUp(navigationMap, fetcher, x, y, maxX, maxY, originDown);\n            case 'ArrowDown':\n                return focusDown(navigationMap, fetcher, x, y, maxX, maxY, originUp);\n            case 'ArrowLeft':\n                return focusLeft(navigationMap, fetcher, x, y, maxX, maxY, originRight);\n            case 'ArrowRight':\n                return focusRight(navigationMap, fetcher, x, y, maxX, maxY, originLeft);\n            case 'Tab':\n                if (modifierKeys.shiftKey) {\n                    return tabDirectionAxis === 'y'\n                        ? focusUp(navigationMap, fetcher, x, y, maxX, maxY, originNext)\n                        : focusLeft(navigationMap, fetcher, x, y, maxX, maxY, originNext);\n                } else {\n                    return tabDirectionAxis === 'y'\n                        ? focusDown(navigationMap, fetcher, x, y, maxX, maxY, originPrev)\n                        : focusRight(navigationMap, fetcher, x, y, maxX, maxY, originPrev);\n                }\n            default:\n                return false;\n        }\n    };\n}\ntry {\n    // @ts-ignore\n    createNavigationHandler.displayName = \"createNavigationHandler\";\n    // @ts-ignore\n    createNavigationHandler.__docgenInfo = { \"description\": \"Create a keyboard event handler from map of focusable elements\\nyou can pass to the `Focuser` to alter the \\\"default\\\" behavior of\\ntabs direction to support multiple column layouts, and\\nadds arrow key navigation.\", \"displayName\": \"createNavigationHandler\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/FieldNavigation.ts#createNavigationHandler\"] = { docgenInfo: createNavigationHandler.__docgenInfo, name: \"createNavigationHandler\", path: \"src/FieldNavigation.ts#createNavigationHandler\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import React from 'react';\nimport { createNavigationHandler, NavigationMap } from '../FieldNavigation';\nimport { TabRegistry } from '../TabRegistry';\nimport { assertNeverNonThrow, filterPropKeys, UnpackedHTMLAttributes } from '../util';\nimport { NavigationKeyHandler } from './Focuser';\nimport { TabBoundary } from './TabBoundary';\n\ninterface ComponentProps<TComp extends keyof JSX.IntrinsicElements = 'div'> {\n    /**\n     * Specify which intrinsic / host component the section should be rendered as.\n     */\n    // tslint:disable-next-line:no-reserved-keywords\n    as?: TComp;\n\n    /**\n     * Render prop with a navigation handler created from the\n     * navigation map and tab direction axis configuration.\n     */\n    children: (navigationHandler: NavigationKeyHandler) => JSX.Element;\n\n    /**\n     * The focus key to identify the section inside the closed ancestor boundary.\n     * **Note**: it should be unique amongst its siblings of the bonudary it lives in.\n     */\n    focusKey: string;\n\n    /**\n     * A matrix of how the focusable elements are layed out.\n     *\n     * If some elements take up 2 elements of space, just\n     * put the same key multiple places.\n     *\n     * @example\n     * [['elm1', 'elm2', 'elm3'],\n     *  ['elm4', null, 'elm3']]\n     */\n    navigationMap: NavigationMap;\n\n    /**\n     * Set the tab direction of the\n     * navigation map.\n     */\n    tabDirectionAxis?: 'x' | 'y';\n}\n\nexport type Props<TComp extends keyof JSX.IntrinsicElements = 'div'> = UnpackedHTMLAttributes<TComp> &\n    ComponentProps<TComp>;\n\ninterface State {\n    navigationHandler: NavigationKeyHandler;\n}\n\n/**\n * Layout component with a fixed setup of the focusable elements.\n * To give the user an intuitive experience of navigating between\n * the focusable elements in grid.\n */\nexport class Grid<TComp extends keyof JSX.IntrinsicElements = 'div'> extends React.Component<Props<TComp>, State> {\n    public static defaultProps = {\n        tabDirectionAxis: 'x',\n    };\n\n    public static displayName = 'Grid';\n    private tabRegistryRef: React.RefObject<TabRegistry>;\n    public constructor(props: Props<TComp>) {\n        super(props);\n        this.tabRegistryRef = React.createRef();\n        this.state = {\n            navigationHandler: createNavigationHandler(\n                props.navigationMap,\n                this.tabRegistryRef,\n                props.tabDirectionAxis,\n            ),\n        };\n    }\n\n    public componentWillReceiveProps(nextProps: Props<TComp>) {\n        if (this.props.navigationMap !== nextProps.navigationMap) {\n            this.setState(_ => ({\n                navigationHandler: createNavigationHandler(nextProps.navigationMap, this.tabRegistryRef),\n            }));\n        }\n    }\n\n    private filterPropKeys = (propKey: keyof ComponentProps<TComp> | 'tabRegistry') => {\n        switch (propKey) {\n            case 'as':\n            case 'children':\n            case 'navigationMap':\n            case 'focusKey':\n            case 'tabDirectionAxis':\n            case 'tabRegistry':\n                return false;\n            default:\n                assertNeverNonThrow(propKey);\n                return true;\n        }\n    };\n\n    public render() {\n        const props = filterPropKeys<ComponentProps<TComp>, TComp, Props<TComp>>(this.props, this.filterPropKeys);\n\n        return (\n            <TabBoundary\n                {...props}\n                as={this.props.as}\n                boundaryKey={this.props.focusKey}\n                tabRegistryRef={this.tabRegistryRef}\n            >\n                {this.props.children(this.state.navigationHandler)}\n            </TabBoundary>\n        );\n    }\n}\ntry {\n    // @ts-ignore\n    Grid.displayName = \"Grid\";\n    // @ts-ignore\n    Grid.__docgenInfo = { \"description\": \"Layout component with a fixed setup of the focusable elements.\\nTo give the user an intuitive experience of navigating between\\nthe focusable elements in grid.\", \"displayName\": \"Grid\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Grid.tsx#Grid\"] = { docgenInfo: Grid.__docgenInfo, name: \"Grid\", path: \"src/components/Grid.tsx#Grid\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { Grid } from './Grid';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"grid\"}}>{`Grid`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A super nice description of what the Grid component does, and problems it solves.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-usage\"}}>{`Basic usage`}</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'<Grid />'} __scope={{props: this ? this.props : props,Grid}}>\n    <Grid />\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Grid} />\n           </MDXTag>\n  }\n}\n  ","import React from 'react';\nimport { TabRegistry } from '../TabRegistry';\nimport { assertNeverNonThrow, filterPropKeys, UnpackedHTMLElement } from '../util';\nimport { NavigationContext } from './NavigationContext';\n\nfunction hasNameProperty<T>(obj: T): obj is T & { name: string } {\n    return obj != null && typeof (obj as any).name === 'string';\n}\n\ninterface ComponentProps<TComp extends keyof JSX.IntrinsicElements> {\n    /**\n     * Specify which intrinsic / host component the section should be rendered as.\n     */\n    // tslint:disable-next-line:no-reserved-keywords\n    as?: TComp;\n\n    /**\n     * Key of the boundary, similar to the `focusKey` of the `Focuser`, `Grid` and `Section`\n     * **Note**: it most be unique within its enclosing boundary.\n     */\n    boundaryKey?: string;\n\n    /**\n     * Whether or not the tab boundary should cycle when attempting\n     * to tab boyond the boundary.\n     */\n    cycle?: boolean;\n\n    /**\n     * Whether ot not to focus the first element if gaining focus\n     * to the boundary from focus origin `next`.\n     */\n    focusFirstOnNextOrigin?: boolean;\n\n    /**\n     * When set to `true` and a child focuses the boundary,\n     * the boundary will delegate focusing up the tree.\n     *\n     * This is useful when having a boundary that only\n     * encloses other boundaries, then escaping an inner boundary\n     * will cause the first child of the outer boundary to be focused\n     * and thus cannot escape the outer boundary, enable this to mitigate that behavior.\n     *\n     * @example\n     * <TabBoundary boundaryKey=\"outer\" focusParentOnChildOrigin={true}>\n     *   <Section focusKey=\"inner1\" />\n     *   <Section focusKey=\"inner2\" />\n     *   <Section focusKey=\"inner3\" />\n     * </TabBoundary>\n     */\n    focusParentOnChildOrigin?: boolean;\n\n    /**\n     * Set this to `true` to focus the parent of the boundary if exists\n     * when hitting the escape key.\n     *\n     * @example\n     * <TabBoundary boundaryKey=\"outer\">\n     *   <Focuser focusKey=\"editor-focuser\" />\n     *   <TabBoundary boundaryKey=\"editor\" focusParentOnEscape={true}>\n     *     <Focuser focusKey=\"editor-input1\" />\n     *     <Focuser focusKey=\"editor-input2\" />\n     *   </TabBoundary>\n     * </TabBoundary>\n     */\n    focusParentOnEscape?: boolean;\n\n    /**\n     * Take a ref to the tab registry this boundary creates.\n     */\n    tabRegistryRef?: React.RefObject<TabRegistry>;\n}\n\nexport type Props<TComp extends keyof JSX.IntrinsicElements = 'div'> = React.HTMLAttributes<\n    UnpackedHTMLElement<JSX.IntrinsicElements[TComp]>\n> &\n    ComponentProps<TComp>;\n\ninterface State {}\n\ntype PropsWithTabRegistry<TComp extends keyof JSX.IntrinsicElements> = Props<TComp> & {\n    parentRegistry: TabRegistry | null;\n};\n\nclass TabBoundaryWithTabRegistry<TComp extends keyof JSX.IntrinsicElements = 'div'> extends React.Component<\n    PropsWithTabRegistry<TComp>,\n    State\n> {\n    public static displayName = 'TabBoundary';\n\n    private tabRegistry: TabRegistry<string>;\n\n    public constructor(props: PropsWithTabRegistry<TComp>) {\n        super(props);\n\n        this.tabRegistry = new TabRegistry({\n            cycle: props.cycle,\n            focusFirstOnNextOrigin: props.focusFirstOnNextOrigin,\n            focusParentOnChildOrigin: props.focusParentOnChildOrigin,\n        });\n\n        if (props.tabRegistryRef != null) {\n            (props.tabRegistryRef as React.MutableRefObject<TabRegistry>).current = this.tabRegistry;\n        }\n    }\n\n    public componentDidMount() {\n        if (this.props.boundaryKey != null && this.props.parentRegistry != null) {\n            this.props.parentRegistry.add(this.props.boundaryKey, this.tabRegistry);\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: PropsWithTabRegistry<TComp>) {\n        if (this.props.cycle !== nextProps.cycle) {\n            nextProps.cycle ? this.tabRegistry.enableCycle() : this.tabRegistry.disableCycle();\n        }\n\n        if (this.props.focusParentOnChildOrigin !== nextProps.focusParentOnChildOrigin) {\n            this.tabRegistry.focusParentOnChildOrigin = nextProps.focusParentOnChildOrigin === true;\n        }\n\n        if (this.props.focusFirstOnNextOrigin !== nextProps.focusFirstOnNextOrigin) {\n            this.tabRegistry.focusFirstOnNextOrigin = nextProps.focusFirstOnNextOrigin === true;\n        }\n\n        if (\n            this.props.boundaryKey !== nextProps.boundaryKey &&\n            this.props.parentRegistry != null &&\n            this.props.parentRegistry.has(this.props.boundaryKey)\n        ) {\n            this.props.parentRegistry.delete(this.props.boundaryKey);\n        }\n    }\n\n    public componentDidUpdate(prevProps: PropsWithTabRegistry<TComp>) {\n        if (\n            this.props.boundaryKey !== prevProps.boundaryKey &&\n            this.props.parentRegistry != null &&\n            this.props.boundaryKey != null\n        ) {\n            this.props.parentRegistry.add(this.props.boundaryKey, this.tabRegistry);\n        }\n    }\n\n    public componentWillUnmount() {\n        if (this.props.boundaryKey != null && this.props.parentRegistry != null) {\n            this.props.parentRegistry.delete(this.props.boundaryKey);\n        }\n    }\n\n    private filterPropKeys = (propKey: (keyof ComponentProps<TComp>) | 'parentRegistry') => {\n        switch (propKey) {\n            case 'as':\n            case 'boundaryKey':\n            case 'cycle':\n            case 'focusFirstOnNextOrigin':\n            case 'focusParentOnEscape':\n            case 'focusParentOnChildOrigin':\n            case 'parentRegistry':\n            case 'tabRegistryRef':\n                return false;\n            default:\n                assertNeverNonThrow(propKey);\n                return true;\n        }\n    };\n\n    private onKeyDown = (e: React.KeyboardEvent<UnpackedHTMLElement<JSX.IntrinsicElements[TComp]>>) => {\n        if (e.key === 'Tab' && hasNameProperty(e.target)) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (e.shiftKey) {\n                this.tabRegistry.focusPrev(e.target.name);\n            } else {\n                this.tabRegistry.focusNext(e.target.name);\n            }\n        } else if (e.key === 'Escape' && this.props.focusParentOnEscape) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.tabRegistry.focusParent();\n        }\n\n        if (this.props.onKeyDown != null) {\n            this.props.onKeyDown(e);\n        }\n    };\n\n    public render() {\n        const props = filterPropKeys<ComponentProps<TComp>, TComp, PropsWithTabRegistry<TComp>>(\n            this.props,\n            this.filterPropKeys,\n        );\n\n        const comp = this.props.as == null ? 'div' : this.props.as;\n        const children = React.createElement(comp, { ...props, onKeyDown: this.onKeyDown }, this.props.children);\n\n        return <NavigationContext.Provider value={this.tabRegistry}>{children}</NavigationContext.Provider>;\n    }\n}\n\ntype PropsWithForwardRef<TComp extends keyof JSX.IntrinsicElements> = Props<TComp> & {\n    forwardedRef?: React.Ref<TabBoundaryWithTabRegistry<TComp>>;\n};\nclass TabBoundaryWithForwardRef<TComp extends keyof JSX.IntrinsicElements = 'div'> extends React.Component<\n    PropsWithForwardRef<TComp>\n> {\n    public static displayName = 'TabRegistry(TabBoundary)';\n\n    private renderChildren = (parentRegistry: TabRegistry | null) => {\n        const { forwardedRef, ...props } = this.props;\n        return <TabBoundaryWithTabRegistry {...props} parentRegistry={parentRegistry} ref={forwardedRef} />;\n    };\n\n    public render() {\n        return <NavigationContext.Consumer children={this.renderChildren} />;\n    }\n}\n\nconst forwardRef = <TComp extends keyof JSX.IntrinsicElements = 'div'>() =>\n    React.forwardRef<TabBoundaryWithTabRegistry<TComp>, Props<TComp>>((props, ref) => (\n        <TabBoundaryWithForwardRef {...props} forwardedRef={ref} />\n    )) as React.ComponentClass<Props<TComp>> &\n        React.ForwardRefExoticComponent<\n            React.PropsWithoutRef<Props<TComp>> & React.RefAttributes<TabBoundaryWithTabRegistry<TComp>>\n        >;\n\n/**\n * Define a tab/navigation boundary of focusable elements.\n * This is a primitive way of grouping focusables.\n *\n * @example Simple\n * <TabBoundary>\n *   <Focuser focusKey=\"field1\" />\n * </TabBoundary>\n *\n * @example Nested boundary\n * <TabBoundary>\n *   <TabBoundary focusKey=\"sidebar\">\n *     <Focuser focusKey=\"menu-link1\" />\n *     <Focuser focusKey=\"menu-link2\" />\n *   </TabBoundary>\n *   <TabBoundary focusKey=\"main-content\">\n *      <Focuser focusKey=\"search-bar\" />\n *      <Focuser focusKey=\"some-other-element\" />\n *   </TabBoundary>\n * </TabBoundary>\n */\nexport type TabBoundary<TComp extends keyof JSX.IntrinsicElements = 'div'> = TabBoundaryWithTabRegistry<TComp>;\nexport const TabBoundary = forwardRef<keyof JSX.IntrinsicElements>();\ntry {\n    // @ts-ignore\n    TabBoundary.displayName = \"TabBoundary\";\n    // @ts-ignore\n    TabBoundary.__docgenInfo = { \"description\": \"Define a tab/navigation boundary of focusable elements.\\nThis is a primitive way of grouping focusables.\\n@example Simple\\n<TabBoundary>\\n<Focuser focusKey=\\\"field1\\\" />\\n</TabBoundary>\\n@example Nested boundary\\n<TabBoundary>\\n<TabBoundary focusKey=\\\"sidebar\\\">\\n<Focuser focusKey=\\\"menu-link1\\\" />\\n<Focuser focusKey=\\\"menu-link2\\\" />\\n</TabBoundary>\\n<TabBoundary focusKey=\\\"main-content\\\">\\n<Focuser focusKey=\\\"search-bar\\\" />\\n<Focuser focusKey=\\\"some-other-element\\\" />\\n</TabBoundary>\\n</TabBoundary>\", \"displayName\": \"TabBoundary\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/TabBoundary.tsx#TabBoundary\"] = { docgenInfo: TabBoundary.__docgenInfo, name: \"TabBoundary\", path: \"src/components/TabBoundary.tsx#TabBoundary\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"sourceRoot":""}