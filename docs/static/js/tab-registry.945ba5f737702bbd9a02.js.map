{"version":3,"sources":["webpack:///./src/TabRegistry.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","docz__WEBPACK_IMPORTED_MODULE_2__","of","__docgenInfo","TabRegistry"],"mappings":"w+CAOqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACjBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KACDO,OAAS,KAFGN,yPADmBO,IAAMC,kDAKnC,IAAAC,EAC0BP,KAAKH,MAA9BW,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOG,EAAAC,EAAAC,cAACC,EAAA,OAAD,CACEC,KAAK,UAELN,WAAYA,GACzBE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,iBAAvD,gBACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,shBAMAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,mBAAvD,kBACAL,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,IAAIN,WAAYA,GAA7B,+TAGAE,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQC,KAAK,KAAKN,WAAYA,EAAYX,MAAO,CAACkB,GAAK,QAAvD,OACAL,EAAAC,EAAAC,cAACI,EAAA,WAAD,CAAYC,GAAI,CAAEC,aAAc,CAAErB,MAAOsB","file":"static/js/tab-registry.fc407e41.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { TabRegistry } from './TabRegistry';\nimport { Component } from 'react';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"tab-registry\"}}>{`Tab registry`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The core of this project lives inside this utility class and data structure.\nA registry is basically just a glorified map, from an identifier to a focus function.\nThe registry keeps track of identifiers and their corresponding focus function, every focus\nfunction has a two jobs, number is to focus its component it represents, and report back to\nif it was successful. Their can be any number of reason why a focus call wasn't successful,\nthe most common one is if the component / input fields is in some kind disabled state.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"data-structure\"}}>{`Data structure`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The registry itself is powered by a doubly linked ordered set of identifiers and a map from an identifier\nand its corresponding focus function, this means that an identifier can only be used once per registry,\nhower it is possible to nest registries, so the identifiers only needs to be unique among its siblings.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"api\"}}>{`API`}</MDXTag>\n<PropsTable of={{ __docgenInfo: { props: TabRegistry } }} />\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}