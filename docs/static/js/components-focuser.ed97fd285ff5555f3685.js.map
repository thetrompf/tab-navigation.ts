{"version":3,"sources":["webpack:///./src/components/Focuser.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","docz__WEBPACK_IMPORTED_MODULE_3__","__codesandbox","__position","__code","__scope","Focuser","useCallback","useMemo","useRef","ref","focus","current","style","height","width","_Focuser__WEBPACK_IMPORTED_MODULE_4__","className","onClick","of"],"mappings":"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","file":"static/js/components-focuser.9f0dc4fa.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import '../docz.less';\nimport { Playground, PropsTable } from 'docz';\nimport { Focuser } from './Focuser';\nimport { useCallback, useMemo, useRef } from 'react';\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"focuser\"}}>{`Focuser`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Every higher level component regarding keyboard navigation in this library\nis build upon or partially implements features from the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/focuser\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`Fucuser`}</MDXTag></MDXTag>{` component.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The basic idea of the component is, that it is an invisible input field,\nso it can be placed pretty much anywhere in the UI, without taking up space\nand not have visual implications of any kind.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"why-is-this-needed\"}}>{`Why is this needed?`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In the web the only things that can have focus, and thus navigate between, are\n`}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`input fields`}</MDXTag>{`, `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`buttons`}</MDXTag>{`, `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`links`}</MDXTag>{`, `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`images`}</MDXTag>{` and `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`contenteditable`}</MDXTag>{`. So if one would go by\ngiving a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`div`}</MDXTag>{` focus, we need to give something else focus, and then use sibling styling via CSS,\nto make the user believe the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`div`}</MDXTag>{` is in focus.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-usage\"}}>{`Basic usage`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={`() => {\n  const ref = useRef()\n  const focus = useCallback(\n    () => ref.current != null && ref.current.focus(),\n    [ref],\n  )\n  const style = useMemo(() => ({\n    height: 30,\n    width: 200,\n  }))\n  return (\n    <div>\n      <Focuser ref={ref} />\n      <div className=\"focus-renderer\" style={style} />\n      <button onClick={focus}>Focus the renderer!</button>\n    </div>\n  )\n}`} __scope={{props: this ? this.props : props,Focuser,useCallback,useMemo,useRef}}>\n    {() => {\n        const ref = useRef();\n        const focus = useCallback(\n            () => ref.current != null && ref.current.focus(),\n            [ref],\n        );\n        const style = useMemo(() => ({\n            height: 30,\n            width: 200,\n        }));\n    return (\n        <div>\n            <Focuser ref={ref} />\n            <div className=\"focus-renderer\" style={style} />\n            <button onClick={focus}>Focus the renderer!</button>\n        </div>\n    );\n}}\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={Focuser} />\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}